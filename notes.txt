Getting Started with Angular:

* It is a great framwork to build client side applications.
* It is great for single page applications SPA's.
* It has a modular approach
* Re-useable code (because of modules).
* Development quicker and easier
* Unit testable
* It is developed by Google and Microsoft.

History:

* It was first released in 2010 and again in 2016 and again in 2016 Dec  

Installation:

* The pre-requistites for getting-started with the Angular are:
   - Node
   - npm 
   - Angular CLI
   - Text Editor (VS Code)

For installing Anular CLI referal link : https://angular.io/cli

Getting started with the Angular project:

* So after installing the Angular CLI and then lets start with creating the project.
* Command used to create an Angular project is: "ng new <projectName>"
* Then get inside the project and run: "ng serve"
* After run the port 4200 in the browser "localhost:4200".

Architechture:

Modules:
 The modules are nothing but few lines of code that can be imported and exported 
 Root module(App module) is the basic which every angular project has.

Components:
 Each module is intern made up of components and services
 A component controlls certain portion of the view on the browser
 eg: component for nav, sidebar etc 
 Every angular project has a main component called as root component(AppComponents)
 All the other components will be nested inside this AppComponent.

Architechture summary:
 Angular App: has one or more modules.
 Module: has one or more components and services(can be exported and imported whereever required inside the projects)
 Components: has HTML + class
 Services: business Logic of the application

NOTE:
 In the src folder we have main.ts which is the entry point to our Angular application 
 We also have the app folder which contains the file app.module.ts which is the root module of our application and also app.component.ts root component.
 The exection starts from the main.ts and there we start  our app module and inside that app component.

Component:

Making a new component and how to add a new component to our angular application.

1. Template : which represends a view (HTML)
2. Class: this contains code that supports the view (typesctipt)
3. Metadata: info required to decisde to identify the class is an angular component or regular class (with a decotator)
   decotator says that is it a angular component or a regular class


* so to create a new component in the project we use the Command: "ng g c <nameOfComponent>"
 explaination:ng g for generate c for component <componentName>

* This command creates a component which includes the css, html and ts files.
* This new component should also be added to our main component app.module.ts and it is automatically done by the Angular CLI.
* Now the selector from the test.component.ts should be placed in the app.component.ts as it is the root component
* Adding the app-test component as a child tag to the parent tag helps in rendering the required ui in from the child component.

So the above instructions are one way to do the rendering as a custom html tag

we can also do this using a class as follows:
* Add a . in the selector name
* Then instead of writing the custom HTML tag we can use a div to that div tag we can add a class "app-test".

we can also do the same as follows:
* Add a [] around the selector name
* Then in the div directly use the selector as an attribute instead of the class.

* So we have the templateURL in the test.component.ts which gets the html, now we can also inline the template in the same file itself
ex: template:  '<div> Inline Template</div>'
wa can also write multiple lines in the same template using backticks (key below the esc)
eg: template:  `<div> Inline Template</div>
              <h1>Multiple lines</h1>`,


Next thing is styleUrls:
* we need to make an array and again use the backticks and provide the styles.

Interpolation:
* It is nothing but binding of data from a class to template.
* We can also perform the calulations, string concatinations, JS properties and methods (also custom methods declared by the user) in the template.
* we cannot assign the variables inside the expression, cannot use global JS variables under the templates

Attribute Vs Properties:
* They are not same
* Attribute intialize dom properties and values cannot be change
